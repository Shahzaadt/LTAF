//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 
namespace LTAF.RemoteService
{
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using LTAF.Engine;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebServiceProxy : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCommandOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteCommandOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateBrowserQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextMacOSCommandOperationCompleted;
        
        private System.Threading.SendOrPostCallback MacOSCommandFinishedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteMacOSCommandOperationCompleted;
        
        /// <remarks/>
        public WebServiceProxy() {
            this.Url = "http://localhost/ajaxbrowserapp/mwt_webservice.asmx";
        }
        
        /// <remarks/>
        public event GetCommandCompletedEventHandler GetCommandCompleted;
        
        /// <remarks/>
        public event ExecuteCommandCompletedEventHandler ExecuteCommandCompleted;
        
        /// <remarks/>
        public event CreateBrowserQueueCompletedEventHandler CreateBrowserQueueCompleted;
        
        /// <remarks/>
        public event GetNextMacOSCommandCompletedEventHandler GetNextMacOSCommandCompleted;
        
        /// <remarks/>
        public event MacOSCommandFinishedCompletedEventHandler MacOSCommandFinishedCompleted;
        
        /// <remarks/>
        public event ExecuteMacOSCommandCompletedEventHandler ExecuteMacOSCommandCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCommand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BrowserCommand GetCommand(BrowserInfo resultOfLastCommand) {
            object[] results = this.Invoke("GetCommand", new object[] {
                        resultOfLastCommand});
            return ((BrowserCommand)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCommand(BrowserInfo resultOfLastCommand, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCommand", new object[] {
                        resultOfLastCommand}, callback, asyncState);
        }
        
        /// <remarks/>
        public BrowserCommand EndGetCommand(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BrowserCommand)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommandAsync(BrowserInfo resultOfLastCommand) {
            this.GetCommandAsync(resultOfLastCommand, null);
        }
        
        /// <remarks/>
        public void GetCommandAsync(BrowserInfo resultOfLastCommand, object userState) {
            if ((this.GetCommandOperationCompleted == null)) {
                this.GetCommandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommandOperationCompleted);
            }
            this.InvokeAsync("GetCommand", new object[] {
                        resultOfLastCommand}, this.GetCommandOperationCompleted, userState);
        }
        
        private void OnGetCommandOperationCompleted(object arg) {
            if ((this.GetCommandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommandCompleted(this, new GetCommandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecuteCommand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BrowserInfo ExecuteCommand(BrowserCommand command, int secondsTimeout) {
            object[] results = this.Invoke("ExecuteCommand", new object[] {
                        command,
                        secondsTimeout});
            return ((BrowserInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginExecuteCommand(BrowserCommand command, int secondsTimeout, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ExecuteCommand", new object[] {
                        command,
                        secondsTimeout}, callback, asyncState);
        }
        
        /// <remarks/>
        public BrowserInfo EndExecuteCommand(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BrowserInfo)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteCommandAsync(BrowserCommand command, int secondsTimeout) {
            this.ExecuteCommandAsync(command, secondsTimeout, null);
        }
        
        /// <remarks/>
        public void ExecuteCommandAsync(BrowserCommand command, int secondsTimeout, object userState) {
            if ((this.ExecuteCommandOperationCompleted == null)) {
                this.ExecuteCommandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteCommandOperationCompleted);
            }
            this.InvokeAsync("ExecuteCommand", new object[] {
                        command,
                        secondsTimeout}, this.ExecuteCommandOperationCompleted, userState);
        }
        
        private void OnExecuteCommandOperationCompleted(object arg) {
            if ((this.ExecuteCommandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteCommandCompleted(this, new ExecuteCommandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateBrowserQueue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateBrowserQueue() {
            this.Invoke("CreateBrowserQueue", new object[0]);
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateBrowserQueue(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateBrowserQueue", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCreateBrowserQueue(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void CreateBrowserQueueAsync() {
            this.CreateBrowserQueueAsync(null);
        }
        
        /// <remarks/>
        public void CreateBrowserQueueAsync(object userState) {
            if ((this.CreateBrowserQueueOperationCompleted == null)) {
                this.CreateBrowserQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateBrowserQueueOperationCompleted);
            }
            this.InvokeAsync("CreateBrowserQueue", new object[0], this.CreateBrowserQueueOperationCompleted, userState);
        }
        
        private void OnCreateBrowserQueueOperationCompleted(object arg) {
            if ((this.CreateBrowserQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateBrowserQueueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNextMacOSCommand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNextMacOSCommand() {
            object[] results = this.Invoke("GetNextMacOSCommand", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNextMacOSCommand(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNextMacOSCommand", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetNextMacOSCommand(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNextMacOSCommandAsync() {
            this.GetNextMacOSCommandAsync(null);
        }
        
        /// <remarks/>
        public void GetNextMacOSCommandAsync(object userState) {
            if ((this.GetNextMacOSCommandOperationCompleted == null)) {
                this.GetNextMacOSCommandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextMacOSCommandOperationCompleted);
            }
            this.InvokeAsync("GetNextMacOSCommand", new object[0], this.GetNextMacOSCommandOperationCompleted, userState);
        }
        
        private void OnGetNextMacOSCommandOperationCompleted(object arg) {
            if ((this.GetNextMacOSCommandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextMacOSCommandCompleted(this, new GetNextMacOSCommandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MacOSCommandFinished", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MacOSCommandFinished(string data) {
            this.Invoke("MacOSCommandFinished", new object[] {
                        data});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMacOSCommandFinished(string data, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MacOSCommandFinished", new object[] {
                        data}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndMacOSCommandFinished(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void MacOSCommandFinishedAsync(string data) {
            this.MacOSCommandFinishedAsync(data, null);
        }
        
        /// <remarks/>
        public void MacOSCommandFinishedAsync(string data, object userState) {
            if ((this.MacOSCommandFinishedOperationCompleted == null)) {
                this.MacOSCommandFinishedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMacOSCommandFinishedOperationCompleted);
            }
            this.InvokeAsync("MacOSCommandFinished", new object[] {
                        data}, this.MacOSCommandFinishedOperationCompleted, userState);
        }
        
        private void OnMacOSCommandFinishedOperationCompleted(object arg) {
            if ((this.MacOSCommandFinishedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MacOSCommandFinishedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecuteMacOSCommand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExecuteMacOSCommand(MacOSCommand command, int secondsTimeout) {
            object[] results = this.Invoke("ExecuteMacOSCommand", new object[] {
                        command,
                        secondsTimeout});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginExecuteMacOSCommand(MacOSCommand command, int secondsTimeout, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ExecuteMacOSCommand", new object[] {
                        command,
                        secondsTimeout}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndExecuteMacOSCommand(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteMacOSCommandAsync(MacOSCommand command, int secondsTimeout) {
            this.ExecuteMacOSCommandAsync(command, secondsTimeout, null);
        }
        
        /// <remarks/>
        public void ExecuteMacOSCommandAsync(MacOSCommand command, int secondsTimeout, object userState) {
            if ((this.ExecuteMacOSCommandOperationCompleted == null)) {
                this.ExecuteMacOSCommandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteMacOSCommandOperationCompleted);
            }
            this.InvokeAsync("ExecuteMacOSCommand", new object[] {
                        command,
                        secondsTimeout}, this.ExecuteMacOSCommandOperationCompleted, userState);
        }
        
        private void OnExecuteMacOSCommandOperationCompleted(object arg) {
            if ((this.ExecuteMacOSCommandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteMacOSCommandCompleted(this, new ExecuteMacOSCommandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MacOSCommand {
        
        private string[] argsField;
        
        private string nameField;
        
        /// <remarks/>
        public string[] Args {
            get {
                return this.argsField;
            }
            set {
                this.argsField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetCommandCompletedEventHandler(object sender, GetCommandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BrowserCommand Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BrowserCommand)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ExecuteCommandCompletedEventHandler(object sender, ExecuteCommandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteCommandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteCommandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BrowserInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BrowserInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void CreateBrowserQueueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetNextMacOSCommandCompletedEventHandler(object sender, GetNextMacOSCommandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextMacOSCommandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextMacOSCommandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void MacOSCommandFinishedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ExecuteMacOSCommandCompletedEventHandler(object sender, ExecuteMacOSCommandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteMacOSCommandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteMacOSCommandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
